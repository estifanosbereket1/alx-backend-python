apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-app # <— the Deployment’s name
  labels:
    app: messaging-app # common label used by Pods & Service
spec:
  replicas: 2 # run two Pods for redundancy
  selector: # “these Pods belong to this Deployment”
    matchLabels:
      app: messaging-app
  template: # blueprint for each Pod
    metadata:
      labels:
        app: messaging-app
    spec:
      containers:
        - name: django # any identifier
          image: ghcr.io/estifanos/messaging:latest # <— YOUR Docker image
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000 # Django’s gunicorn/uWSGI port
          env: # typical Django env vars (example)
            - name: DJANGO_SETTINGS_MODULE
              value: "messaging_app.settings"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: messaging-secrets
                  key: DATABASE_URL
          readinessProbe: # confirms “ready to serve”
            httpGet:
              path: /healthz/ # implement a lightweight view
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe: # restarts container if stuck
            httpGet:
              path: /healthz/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: messaging-app
spec:
  type: ClusterIP # internal‑only, default
  selector:
    app: messaging-app # routes to Pods with this label
  ports:
    - port: 80 # service’s stable port
      targetPort: 8000 # inside‑Pod port
